/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package admissionsystem;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dell
 */
public class collProfs extends javax.swing.JFrame {

    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    student s;
    Boolean complete;
    int selected = 0;
    
    public collProfs() throws SQLException, ClassNotFoundException {
        initComponents();
        tableUpdate();
        
    }

    collProfs(student s) throws ClassNotFoundException, SQLException, FileNotFoundException {
        initComponents();
        tableUpdate();
        this.s = new student();
        DefaultTableModel model = (DefaultTableModel)jTable2.getModel();
        int n = jTable2.getRowCount();
        for(int i = 0; i < n; i++) {
            model.setValueAt(false, i, 13);
            
        }
        complete = s.getProfileStatus();
        //if(complete) {

            this.s.setName(s.getName());
            this.s.setCnic(s.getCnic());
            this.s.setAddress(s.getAddress());
            this.s.setEmail(s.getEmail());
            this.s.setPhone(s.getPhone());
            this.s.setGender(s.getGender());
            this.s.setSchool(s.getSchool());
            this.s.setUsername(s.getUsername());
            this.s.setDOB(s.getDOB());
            this.s.setSubs(s.getSubs());
            this.s.setProfileStatus(s.getProfileStatus());
          
            for(int i = 0; i < s.subjects.size(); i++) {
                    this.s.subjects.add(s.subjects.get(i));
                    this.s.grades.add(s.grades.get(i));
                }
            for(int i = 0; i < s.colleges.size(); i++) {
                    this.s.colleges.add(s.colleges.get(i));
                    this.s.applicationStatus.add(s.applicationStatus.get(i));
                }
        //}
    }
    public void tableUpdate() throws ClassNotFoundException, SQLException {
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            con = DriverManager.getConnection("jdbc:ucanaccess://Colleges.accdb");
            pst = con.prepareStatement("select * from colleges");
            rs = pst.executeQuery();
            
            ResultSetMetaData rsd = rs.getMetaData();
            
            DefaultTableModel dft2 = (DefaultTableModel)jTable2.getModel();
            dft2.setRowCount(0);
            while(rs.next())
            {
                Object[] array = new Object[13];
                
                    array[0] = rs.getString("CollegeName");
                    array[1] = rs.getString("City");
                    array[2] = rs.getString("Address");                   
                    array[3] = rs.getString("email"); 
                    array[4] = rs.getString("Phone");
                    array[5] = rs.getString("YearFounded");
                    array[6] = rs.getString("Strength");
                    array[7] = rs.getString("MaleRatio");
                    array[8] = rs.getString("FemaleRatio");
                    array[9] = rs.getString("Fees");
                    array[10] = rs.getString("NumberOfSubjects");
                    array[11] = rs.getString("Subjects");
                    array[12] = rs.getString("Teachers");
                    
                    
                if(!rs.getString("Status").equals("false")) {
                     dft2.addRow(array);
                }
              
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("College Profiles");

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("College Profiles");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(718, 718, 718)
                .addComponent(jLabel1)
                .addContainerGap(753, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jButton1.setBackground(new java.awt.Color(255, 51, 51));
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "City", "Address", "email", "Phone", "Year Founded", "Total Strength", "Male %", "Female %", "Monthly Fees", "Total Subjects", "Subjects", "Teachers", "Apply"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jButton2.setBackground(new java.awt.Color(0, 255, 51));
        jButton2.setForeground(new java.awt.Color(0, 0, 0));
        jButton2.setText("Apply");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(576, 576, 576)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(140, 140, 140)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(49, 49, 49))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            new studentHome(s).setVisible(true);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(collProfs.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(collProfs.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(collProfs.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked

       
    }//GEN-LAST:event_jTable2MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        if(!complete) {
            JOptionPane.showMessageDialog(this, "Complete your profile first in order to sent your application to colleges");
        }
        else{
        
        
        DefaultTableModel model = (DefaultTableModel)jTable2.getModel();
        RandomAccessFile file;
        try {
            //file = new RandomAccessFile("info.dat","rw");
            int n = jTable2.getRowCount();
            for(int i = 0; i < n; i++) {
            boolean found = false;
            if(model.getValueAt(i, 13).toString().equals("true")){
                selected++;
                for(int j = 0; j < s.colleges.size(); j++) {
                    if(s.colleges.get(j).equals(model.getValueAt(i, 0).toString())){
                        found = true;
                    }
                }
                if(!found){
                    s.colleges.add(model.getValueAt(i, 0).toString());
                    s.applicationStatus.add("College has not reviewed application yet");
                } 
            }
            }
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            con = DriverManager.getConnection("jdbc:ucanaccess://Students.accdb");
            pst = con.prepareStatement("update students set Colleges=?, ApplicationStatus=? where Username = ?");
            pst.setString(1, s.colleges.toString());
            pst.setString(2, s.applicationStatus.toString());
            pst.setString(3, s.getUsername());
           
            pst.executeUpdate();
            
            
            
            if(selected > 0) {
                JOptionPane.showMessageDialog(this, "Application Sent");
            
            new studentHome(s).setVisible(true);
            this.setVisible(false);
            }
            else
                JOptionPane.showMessageDialog(this, "Select atleast 1 college to sent Application");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(collProfs.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(collProfs.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(collProfs.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(collProfs.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        //s.colleges = new ArrayList<>();
        //s.applicationStatus = new ArrayList();
       
        
            
        
      
            
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(collProfs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(collProfs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(collProfs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(collProfs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new collProfs().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(collProfs.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(collProfs.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
